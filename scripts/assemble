#!/usr/bin/env python

import glob
import logging
import os
import random
import re
import sys


all_paths = []
log_level = logging.INFO
output_dir = "assembled"
seed = "geocities-forever"

posargs = iter(sys.argv[1:])

while True:
    try:
        arg = next(posargs)
    except StopIteration:
        break

    if arg in ("-v", "--verbose"):
        log_level = logging.DEBUG
    elif arg == "--output-dir":
        output_dir = next(posargs)
    elif arg == "--seed":
        seed = next(posargs)
    elif arg.startswith("-"):
        raise SystemExit("Unrecognised option: {}".format(arg))
    else:
        all_paths.append(arg)

all_paths = all_paths or glob.glob('processed/*')

logging.basicConfig(level=log_level)
log = logging.getLogger(__name__)

random.seed(seed)

LINK = re.compile(
    r'\bhref=(".*?"|\'.*?\'|[^ >]+)',
    flags=(re.IGNORECASE|re.DOTALL),
)

all_names = [os.path.basename(path) for path in all_paths]

def rewrite_link(match):
    return 'href="{}"'.format(random.choice(all_names))

if not os.path.exists(output_dir):
    os.makedirs(output_dir)

for raw_path in sorted(all_paths):
    processed_path = os.path.join(output_dir, os.path.basename(raw_path))
    logging.debug("{} -> {}".format(raw_path, processed_path))

    with open(raw_path, 'rb') as f:
        html = f.read()

    html = LINK.sub(rewrite_link, html)

    scripts = ['jquery', 'sha1', 'links']
    script_tags = ''.join('<script src="{}.js"></script>\n'.format(s) for s in scripts)

    ga = """
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-4209567-5', 'auto');
  ga('send', 'pageview');

</script>
"""

    with open(processed_path, 'wb') as f:
        f.write(script_tags)
        f.write(ga)
        f.write(html)
